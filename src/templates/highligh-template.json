{
  "directories": [
    "store",
    "hooks",
    "components",
    "utils",
    "app",
    "src/styles",
    "src/components"
  ],
  "files": [
    {
      "target": "store/sectionStore.ts",
      "content": "import { create } from 'zustand';\n\ntype SectionStore = {\n  sectionInView: string | null;\n  setSectionInView: (_sectionId: string | null) => void;\n};\n\nexport const useSectionStore = create<SectionStore>()(set => {\n  return {\n    sectionInView: null,\n    setSectionInView: sectionId => {\n      return set(() => {\n        return {\n          sectionInView: sectionId,\n        };\n      });\n    },\n  };\n});\n"
    },
    {
      "target": "hooks/useWindowDimentions.ts",
      "content": "import { useEffect, useState } from 'react';\n\nfunction getWindowDimensions() {\n  if (typeof window === 'undefined') {\n    return {\n      height: 0,\n      width: 0,\n    };\n  }\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    height,\n    width,\n  };\n}\n\nexport default function useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => {\n      return window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return { height: windowDimensions.height, width: windowDimensions.width };\n}\n"
    },
    {
      "target": "hooks/useSectionIsInView.ts",
      "content": "import { useInView } from 'react-intersection-observer';\nimport { useSectionStore } from '../store/sectionStore';\nimport useWindowDimensions from './useWindowDimentions';\n\nexport function useSectionIsInView(sectionId: string, containerHeight: number) {\n  const { setSectionInView } = useSectionStore();\n\n  const { height: windowHeight } = useWindowDimensions();\n\n  const scalingFactor = 2; // Increase to make thresholds smaller, decrease to make them larger\n  const containerScale = containerHeight / windowHeight;\n\n  const rawThreshold = 1 / containerScale;\n  const adjustedThreshold = Math.min(1, Math.max(0, rawThreshold / scalingFactor));\n\n  // Ensure the adjusted threshold doesn't go below a certain value (e.g., 0.1)\n  const minimumThreshold = 0.1;\n  const scrollThreshold = Math.max(minimumThreshold, adjustedThreshold);\n\n  const { ref } = useInView({\n    onChange: inView => {\n      if (inView) {\n        setSectionInView(sectionId);\n      }\n    },\n    threshold: scrollThreshold,\n  });\n\n  return [ref];\n}\n"
    },
    {
      "target": "components/Section.tsx",
      "content": "'use client';\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSectionIsInView } from '../hooks/useSectionIsInView';\n\ntype Props = {\n  children: React.ReactNode;\n  sectionId: string;\n};\n\nexport default function Section({ children, sectionId, ...otherProps }: Props) {\n  const [containerHeight, setContainerHeight] = useState(0);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [ref] = useSectionIsInView(sectionId, containerHeight);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      setContainerHeight(containerRef.current.offsetHeight);\n    }\n  }, []);\n\n  return (\n    <div ref={containerRef} className=\"w-[500px] rounded bg-slate-300 p-4\">\n      <div id={sectionId} ref={ref} {...otherProps}>\n        {children}\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "target": "components/Sections.tsx",
      "content": "import React from 'react';\nimport Section from './Section';\n\nexport default function Sections() {\n  return (\n    <div className=\"flex flex-col gap-10\">\n      <Section sectionId=\"home\">\n        <h2>Home</h2>\n        <div className=\"h-[300px]\">Welcome to my website!</div>\n      </Section>\n      <Section sectionId=\"about\">\n        <h2>About</h2>\n        <div className=\"h-[1000px]\">This is the about section.</div>\n      </Section>\n      <Section sectionId=\"projects\">\n        <h2>Projects</h2>\n        <div className=\"h-[200px]\">This is the projects section.</div>\n      </Section>\n      <Section sectionId=\"contact\">\n        <h2>Contact</h2>\n        <div className=\"h-[700px]\">This is the contact section.</div>\n      </Section>\n    </div>\n  );\n}\n"
    },
    {
      "target": "utils/cn.ts",
      "content": "import clsx from 'clsx';\nimport { twMerge } from 'tailwind-merge';\nimport type { ClassValue } from 'clsx';\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"
    },
    {
      "target": "components/SectionsOverview.tsx",
      "content": "'use client';\n\nconst sections = [\n  {\n    id: 'home',\n    title: 'Home',\n  },\n  {\n    id: 'about',\n    title: 'About',\n  },\n  {\n    id: 'projects',\n    title: 'Projects',\n  },\n  {\n    id: 'contact',\n    title: 'Contact',\n  },\n];\n\nimport React from 'react';\nimport { useSectionStore } from '../store/sectionStore';\nimport { cn } from '../utils/cn';\n\nexport default function SectionsOverview() {\n  const { sectionInView } = useSectionStore();\n\n  return (\n    <div className=\"sticky top-20 flex h-fit flex-col gap-4 rounded bg-slate-500 p-5 text-white\">\n      <h2>Sections Overview</h2>\n      <div className=\"flex flex-col gap-2\">\n        {sections.map(({ id, title }) => {\n          return (\n            <a\n              className={cn(sectionInView === id && 'outline outline-white', 'rounded p-2 hover:bg-slate-400')}\n              key={id}\n              href={`#${id}`}\n            >\n              {title}\n            </a>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "target": "app/page.tsx",
      "content": "import React from 'react';\nimport Sections from '../components/Sections';\nimport SectionsOverview from '../components/SectionsOverview';\n\nexport default function Home() {\n  return (\n    <div className=\"flex justify-center p-20\">\n      <div className=\"flex flex-row gap-10\">\n        <SectionsOverview />\n        <Sections />\n      </div>\n    </div>\n  );\n}\n"
    },
    {
      "target": "src/styles/mailStyle.module.css",
      "content": "@import url(https://fonts.googleapis.com/css?family=Sacramento);\r\n@import url('https://fonts.googleapis.com/css?family=Srisakdi:700');\r\n@import url('https://fonts.googleapis.com/css?family=Pacifico');\r\n\r\n/* :global(html) {\r\n    height: 100%;\r\n} */\r\n\r\n.body {\r\n    min-height: 100vh;\r\n    box-sizing: border-box;\r\n    background: url('http://jomesthewedding.com/wp-content/themes/jomes/library/images/dots.gif') #CEECED;\r\n    font-family: 'Sacramento', cursive;\r\n    font-size: 2.6rem;\r\n    color: #2f2f2f;\r\n    text-align: center;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    perspective: 1000px;\r\n}\r\n\r\n.envelope {\r\n    background: #d28a81;\r\n    border-radius: 0 0 4px 4px;\r\n    width: 320px;\r\n    height: 320px;\r\n    min-height: 320px;\r\n    margin: 20px auto;\r\n    position: relative;\r\n    transition: all 0.3s cubic-bezier(.42, 0, .58, 1);\r\n    transform-origin: 50 50%;\r\n}\r\n\r\n.envelope::before,\r\n.envelope::after {\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    bottom: 0;\r\n    z-index: 2;\r\n}\r\n\r\n.envelope::before {\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 296px 0 0 300px;\r\n    border-color: transparent transparent transparent #E9978C;\r\n}\r\n\r\n.envelope::after {\r\n    right: 0;\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    border-width: 0 0 296px 300px;\r\n    border-color: transparent transparent #E9978C transparent;\r\n}\r\n\r\n.envelopeOpen {\r\n    transform: rotateZ(7deg) translateY(130px) rotateY(-9deg);\r\n}\r\n\r\n.envelopeOpen .flapOutside {\r\n    top: -1px;\r\n    animation: open-flap 0.6s ease-in-out forwards;\r\n}\r\n\r\n.envelopeOpen .flapOutside .flap {\r\n    background: #d28a81;\r\n}\r\n\r\n.envelopeOpen .card {\r\n    transform: translateX(14%) translateY(-200px);\r\n    transition-delay: 0.6s;\r\n}\r\n\r\n.card {\r\n    background: #ffffff;\r\n    position: absolute;\r\n    overflow: hidden;\r\n    left: 0;\r\n    bottom: 0;\r\n    width: 70%;\r\n    height: 85%;\r\n    padding: 10px 20px;\r\n    transform: translateX(14%);\r\n    transition: all 0.3s cubic-bezier(.42, 0, .58, 1) 0s;\r\n    z-index: 1;\r\n}\r\n\r\n.card h2 {\r\n    font-family: 'Pacifico', cursive;\r\n    font-size: 2rem;\r\n    line-height: 0.6;\r\n    margin-top: 0.4em;\r\n}\r\n\r\n.card p {\r\n    font-family: 'Srisakdi', cursive;\r\n\r\n}\r\n\r\n.flapContainer {\r\n    border-radius: 4px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all 0.4s cubic-bezier(.18, .81, .76, .93) 0s;\r\n    z-index: 3;\r\n}\r\n\r\n.flapOutside {\r\n    overflow-y: auto;\r\n    transform-origin: 50% 0;\r\n    animation-delay: 0.6s;\r\n    animation-fill-mode: backwards;\r\n    z-index: 4;\r\n}\r\n\r\n.flapOutside .flap {\r\n    background: #E9978C;\r\n    backface-visibility: hidden;\r\n}\r\n\r\n.flapOutside .flap::after {\r\n    background: #d28a81;\r\n    backface-visibility: hidden;\r\n    content: '';\r\n    display: block;\r\n    position: absolute;\r\n    transform: rotateX(180deg);\r\n    height: 100%;\r\n    width: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 1;\r\n}\r\n\r\n.flapInside {\r\n    transform: rotateX(180deg);\r\n    border-radius: 0 0 4px 4px;\r\n    overflow: hidden;\r\n}\r\n\r\n.flapInside .flap {\r\n    border-radius: 40px 40px 80px 40px;\r\n    border: 1px solid #d28a81;\r\n    margin-top: 20px;\r\n}\r\n\r\n.flap {\r\n    background: #E9978C;\r\n    border: 1px solid #d28a81;\r\n    border-radius: 40px;\r\n    overflow: hidden;\r\n    width: 300px;\r\n    height: 300px;\r\n    position: absolute;\r\n    top: -50%;\r\n    left: 50%;\r\n    margin: -20px 0 0 -151px;\r\n    transform: rotateZ(45deg);\r\n    transform-style: preserve-3d;\r\n    transition: all 0.8s ease 0s;\r\n    z-index: 2;\r\n}\r\n\r\n.flap .lining {\r\n    background: url('http://jomesthewedding.com/wp-content/themes/jomes/library/images/flyer-bouquet.jpg') 50% 50% #A3CAC0;\r\n    backface-visibility: hidden;\r\n    border-radius: 0 0 40px 0;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 92%;\r\n    height: 92%;\r\n}\r\n\r\n.textclick {\r\n    font-weight: bold;\r\n    margin: 0;\r\n}\r\n\r\n@keyframes open-flap {\r\n    0% {\r\n        transform: rotateX(0deg);\r\n        z-index: 4;\r\n    }\r\n\r\n    50% {\r\n        transform: rotateX(90deg);\r\n        z-index: 0;\r\n    }\r\n\r\n    100% {\r\n        transform: rotateX(180deg);\r\n        z-index: 0;\r\n    }\r\n}"
    },
    {
      "target": "src/components/mainMail.tsx",
      "content": "'use client'\r\nimport React, { useEffect, useState } from 'react';\r\nimport styles from '../styles/mailStyle.module.css';\r\nimport Image from 'next/image';\r\nconst InvitationCard: React.FC = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const handleEnvelopeClick = () => {\r\n            setIsOpen(prevState => !prevState);\r\n        };\r\n\r\n        const envelope = document.querySelector(`.${styles.envelope}`);\r\n        if (envelope) {\r\n            envelope.addEventListener('click', handleEnvelopeClick);\r\n        }\r\n\r\n        // Cleanup event listener on component unmount\r\n        return () => {\r\n            if (envelope) {\r\n                envelope.removeEventListener('click', handleEnvelopeClick);\r\n            }\r\n        };\r\n    }, [styles.envelope]);\r\n\r\n    return (\r\n        <div className={styles.body}>\r\n            <div className={`${styles.envelope} ${isOpen ? styles.envelopeOpen : ''}`}>\r\n                <div className={styles.card}>\r\n                    <h2 className='mb-4'>Fiesta sorpresa</h2>\r\n                    <p className='text-xs'>60 años chandy</p>\r\n                    <p className='text-xs'>\r\n                        Sabado 17 de agosto 20:00!\r\n                        <br />\r\n                        {/* Hora: 17:00 */}\r\n                        <br />\r\n                        Lugar: COnfirmar asistencia \r\n                        <br />\r\n                        <div className='flex flex-row justify-center'>\r\n                            <Image src='/cookie.png' alt=\"cookie\" width={50} height={50} />\r\n                            <Image src='/tea.png' alt=\"cookie\" width={50} height={50} />\r\n                        </div>\r\n                        Estara muuuu weno \r\n                        <br/>\r\n                        Con mucho cariño: K\r\n                    </p>\r\n                </div>\r\n                <div className={`${styles.flapOutside} ${styles.flapContainer}`}>\r\n                    <div className={styles.flap}>\r\n                        <div className={styles.lining}></div>\r\n                    </div>\r\n                </div>\r\n                <div className={`${styles.flapInside} ${styles.flapContainer}`}>\r\n                    <div className={styles.flap}></div>\r\n                </div>\r\n                <svg\r\n                    version=\"1.1\"\r\n                    className={styles.string}\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n                    x=\"0px\"\r\n                    y=\"0px\"\r\n                    viewBox=\"0 0 400 400\"\r\n                    enableBackground=\"new 0 0 400 400\"\r\n                    xmlSpace=\"preserve\"\r\n                    preserveAspectRatio=\"xMidYMid meet\"\r\n                >\r\n                    <path\r\n                        fill=\"none\"\r\n                        stroke=\"#fff\"\r\n                        strokeWidth=\"3\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeMiterlimit=\"10\"\r\n                        d=\"M0,202.768l247.674,0.566c0,0,17.438,0.373,26.027-0.333c3.292-0.086,10.681-2.608,12.901-6.277\r\n                c9.421-15.545,10.722-22.938,14.738-32.724c14.667-35.75,37.693-52.331,50-41.333c13.166,11.766-4.703,35.756-15.667,48.333\r\n                c-12.222,14.018-23.661,18.463-38,24.667c-12.307,5.325-44.737,16.634-59.435,25.867c-16.134,10.137-19.231,9.467-49.832,39.508\"\r\n                    />\r\n                    <path\r\n                        fill=\"none\"\r\n                        stroke=\"#fff\"\r\n                        strokeWidth=\"3\"\r\n                        strokeLinecap=\"round\"\r\n                        strokeLinejoin=\"round\"\r\n                        strokeMiterlimit=\"10\"\r\n                        d=\"M600,201.587l-276.18,0.127c0,0-33.438-0.151-39.313-3.339c-6.144-3.333-38.832-67.707-59.101-70.055\r\n                c-16.598-1.923-16.888,14.444-13.663,23.347c3.156,8.713,11.264,20.667,31.125,32.889c9.736,5.991,23.593,10.774,34.574,14.636\r\n                c1.523,0.536,6.154,2.708,9.058,3.568c50.508,14.908,73.965,32.449,87.632,40.116\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <p className={styles.textclick}>Ha llegado carta, presionala</p>\r\n            <h6 className='text-xs'>Creditos a: Dianas Universe(Codepen, de ahi lo saque)</h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InvitationCard;\r\n"
    }
  ],
  "dependencies": [
    "react",
    "react-intersection-observer",
    "zustand",
    "clsx",
    "tailwind-merge"
  ],
  "packageScripts": {}
}